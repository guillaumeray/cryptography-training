import hashlib

"""
Let's use some RSA data
n : modulo
e : Alice public key
d : Alice private key
e : Bob public key (we will not use it in the example)
d : Bob private key (we will not use it in the example)

Both Alice and Bob has public key of each other
Alice want to guarantee she is the good person (owner of couple public/private key)
Because anyone can encrypt a message with Bob public key instead of Alice
Alice will encrypt hash of message with her private key
Bob will decrypt hash of message with Alice public key
Bob can then verify that Alice is the good owner of public/private key

Bob can do the same to prove that his identity is good.
"""
n = 75330
e = 7
d = 21523

# This is Alice message
# We suppose Alice encrypt message with Bob public key but we will not do it in this example
message = "Bob you are sexy".encode()

# hash message
sha256 = hashlib.sha256()
sha256.update(message)
h = sha256.digest()
# convert hash bytes to int, we reduced hash number % n for simplicity
h = int.from_bytes(h, "big") % n
print("Hash value generated by Alice: ", h)
# encrypt hash value
sign = h**d % n

# This bob receiving message and signature
# We suppose Bob already decrypt the message from Alice and have message in clear
sha256 = hashlib.sha256()
sha256.update(message)
h = sha256.digest()
h = int.from_bytes(h, "big") % n
print("Hash value generated by Bob from decrypted message: ", h)
# decrypt hash signature
verification = sign**e % n 
print("Hash decryption of Alice signature:", verification)

"""
The digital signature in RSA consist in : 
Alice want to prove she is the right owner of couple public/private key

Alice hash her message and encrypt it with her private key
Alice encrypt message with Bob public key
Bob decrypt message with his private key
Bob hash clear message 
Bob decrypt Alice hash with Alice public key and compare with his hash
If it's match then Alice is the good owner of public/private key

This way, we fix the problem of authentification and integrity of message
We can assert that Alice message has not been modified and she is the right owner of public key.

Bob do the same in the other way to prove his identity.

The big idea is that we can encrypt with public key and decrypt with private key
But we can also encrypt with the private key and decrypt with the public one.
"""